buildscript {
    repositories {
        maven {
            url "https://maven.aliyun.com/repository/public"
        }
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

subprojects {
    repositories {
        maven {
            url "https://maven.aliyun.com/repository/public"
        }
        mavenCentral()
    }

    apply plugin: 'idea'
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
        }
    }

    sourceCompatibility = 11
    targetCompatibility = 11

    configurations {
        compile.exclude module: 'spring-boot-starter-logging'
        compile.exclude module: 'commons-logging'
        compile.exclude module: 'commons-dbcp'
        compile.exclude module: 'junit-vintage-engine'
        compile.exclude module: 'oauth2-oidc-sdk'
        compile.exclude module: 'log4j'
        compile.exclude module: 'ehcache'
        compile.exclude group: 'junit'

        developmentOnly
        runtimeClasspath {
            extendsFrom developmentOnly
        }
    }

    jar {
        enabled = true
    }

    test {
        useJUnitPlatform()
    }

    dependencies {
        // test
        testImplementation("org.springframework.boot:spring-boot-starter-test")
        testImplementation("org.springframework.security:spring-security-test")
        testImplementation("org.junit.jupiter:junit-jupiter-api")
        testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
        // lombok
        compileOnly("org.projectlombok:lombok")
        testImplementation("org.projectlombok:lombok")
        annotationProcessor("org.projectlombok:lombok")
        testAnnotationProcessor("org.projectlombok:lombok")
    }

}
